---
layout:     post
title:      "主席树（可持久化线段树）"
subtitle:   "Persistent Segment Tree"
date:       2018-07-26 11:42:00
author:     "ShuTsing"
header-img: "img/post-bg-21.jpg"
header-mask: 0.3
catalog:    true
tags:
    - 数据结构
    - 算法
---

## 引言

主席树，~~又称为伟大领袖树、红太阳树~~，学名叫做可持久化线段树，也可叫做函数式线段树。

为什么这玩意会叫主席树呢，据传说，这个数据结构是由一位名叫黄嘉泰的大佬发明的，黄嘉泰的配音缩写为HJT，正好是某位国家领导人的拼音首字母缩写对吧（反正我博客是境外网站）。

![hjt](https://upload-images.jianshu.io/upload_images/13252077-d12ae0ff1d91090c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)

## 回顾

主席树这玩意的学名既然叫做可持久化线段树，那么可以肯定，这玩意肯定是在线段树的基础上进行魔改的，具体来说，是权值线段树。

### 权值线段树

什么叫做权值线段树呢？？

对于我们普通的线段树，不管你是求sum，求max，还是求min，每个节点存放的都是那个节点对应的那段下标的sum、max或者min。

而权值线段树则是先进行离散化操作，每个节点存放的是区间内的数字出现的总次数。

举个例子来说明：

假设，我们有如下数组：

| IDX | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |
| :-: | :-: | :-: | :-: | :-: | :-: | :-: |:-: | :-: | :-: | :-: |
| VALUE | 1 | 1 | 2 | 4 | 3 | 3 | 4 | 4 | 4 | 5 |

![vst](https://upload-images.jianshu.io/upload_images/13252077-f6910e75b004a97d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)

节点(1, 1)存放的数组中1出现的次数，(2, 2)中存放的数组中2出现的次数，以此类推……

节点(1, 2)存放的1和2出现的次数的总和，以此类推……

上图所示的就是这样一颗权值线段树。

## 正篇

我们已经了解了权值线段树是什么了，那么我们现在来看看如下的问题：

>给出一个长度为n的序列和q次询问，每次询问这个序列的第k大元素是多大。   
>n, q∈[1, 100000], ai∈[1, 1e9], k∈[1, n]

很显然，这道题可以将这个序列排序，然后每次查询即可，但是我们不用这个办法，我们用线段树怎么来解决这个问题呢？

我们对这个序列建立一颗权值线段树，假设我要找第7大的元素，那么我先从根节点开始找，根节点为10，说明这个序列总共有10个，看左右节点的权值，左节点的值为9，说明序列中的前9小的数字都在左子树，那我们继续从这个节点开始找，那么这个节点的左节点是3，不行，那我们在其右节点寻找第7-3=4大的节点，再然后我们再在这个节点的右节点寻找第4-2=2大的节点，最终确定第k大的值是4。

我们用了一种很优秀的方法出色的解决了求区间1..n的第k大问题，那么我们把上述题目改一下：

>给出一个长度为n的序列和q次询问，每次询问这个序列中区间(l, r)的第k大元素是多大。   
>n, q, l∈[1, 100000], r∈[l, n], ai∈[1, 1e9], k∈[1, l-r]



先挂着再说……
